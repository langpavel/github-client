{"version":3,"sources":["App.js","index.js","../node_modules/graphql-language-service-interface/dist sync /^.*$"],"names":["apiUrl","localStorage","getItem","apiToken","fetcher","graphQLParams","fetch","method","headers","Content-Type","Authorization","body","JSON","stringify","then","response","json","GraphiQL","formatResult","prettier","format","parser","plugins","babylon","CustomTools","state","url","token","handleSubmit","e","preventDefault","target","value","setItem","console","log","setUrlToken","_this","setState","handleUrlChange","key","handleTokenChange","react_default","a","createElement","className","onSubmit","this","name","type","autoComplete","onChange","href","rel","Component","Toolbar","props","children","App_CustomTools","App","dist_default","ReactDOM","render","src_App_0","document","getElementById","map",".","./","./GraphQLLanguageService","./GraphQLLanguageService.js","./GraphQLLanguageService.js.flow","./autocompleteUtils","./autocompleteUtils.js","./autocompleteUtils.js.flow","./getAutocompleteSuggestions","./getAutocompleteSuggestions.js","./getAutocompleteSuggestions.js.flow","./getDefinition","./getDefinition.js","./getDefinition.js.flow","./getDiagnostics","./getDiagnostics.js","./getDiagnostics.js.flow","./getHoverInformation","./getHoverInformation.js","./getHoverInformation.js.flow","./getOutline","./getOutline.js","./getOutline.js.flow","./index","./index.js","./index.js.flow","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.02cd21de.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport prettier from 'prettier/standalone';\nimport babylon from 'prettier/parser-babylon';\nimport GraphiQL from '@langpavel/graphiql';\nimport '@langpavel/graphiql/graphiql.css';\nimport './App.css';\n\nlet apiUrl =\n  localStorage.getItem('graphiql:apiUrl') || 'https://api.github.com/graphql';\nlet apiToken = localStorage.getItem('graphiql:token:' + apiUrl);\n\nfunction setUrlToken(url, token) {\n  apiUrl = url;\n  apiToken = token;\n  localStorage.setItem('graphiql:apiUrl', url);\n  localStorage.setItem('graphiql:token:' + url, token);\n  console.log('New token set for url', url);\n}\n\nconst fetcher = graphQLParams => {\n  return fetch(apiUrl, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'bearer ' + apiToken,\n    },\n    body: JSON.stringify(graphQLParams),\n  }).then(response => response.json());\n};\n\nGraphiQL.formatResult = response =>\n  prettier.format(JSON.stringify(response), {\n    parser: 'json',\n    plugins: [babylon],\n  });\n\nclass CustomTools extends Component {\n  state = {\n    url: apiUrl,\n    token: apiToken,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const target = e.target;\n    const url = target.url.value;\n    const token = target.token.value;\n    setUrlToken(e.target.url.value, e.target.token.value);\n    this.setState({ url, token });\n  };\n\n  handleUrlChange = e => {\n    const url = e.target.value;\n    const key = 'graphiql:token:' + url;\n    const token = localStorage.getItem(key) || '';\n    this.setState({ url, token });\n  };\n\n  handleTokenChange = e => {\n    const token = e.target.value;\n    this.setState({ token });\n  };\n\n  render() {\n    return (\n      <span className=\"Toolbar-token\">\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            {'URL: '}\n            <input\n              name=\"url\"\n              type=\"text\"\n              value={this.state.url}\n              autoComplete=\"graphql-api url\"\n              onChange={this.handleUrlChange}\n            />\n          </label>{' '}\n          <label>\n            <a\n              href=\"https://github.com/settings/tokens\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              bearer\n            </a>\n            {': '}\n            <input\n              name=\"token\"\n              type=\"password\"\n              onChange={this.handleTokenChange}\n              value={this.state.token}\n              autoComplete=\"graphql-api-token bearer-token token\"\n            />\n          </label>{' '}\n          <button type=\"submit\">Set</button>\n        </form>\n      </span>\n    );\n  }\n}\n\nGraphiQL.Toolbar = props => (\n  <div className=\"toolbar\">\n    {props.children}\n    <CustomTools />\n  </div>\n);\n\nclass App extends Component {\n  render() {\n    return <GraphiQL fetcher={fetcher} />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@langpavel/graphiql/graphiql.css';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","var map = {\n\t\".\": 27,\n\t\"./\": 27,\n\t\"./GraphQLLanguageService\": 58,\n\t\"./GraphQLLanguageService.js\": 58,\n\t\"./GraphQLLanguageService.js.flow\": 181,\n\t\"./autocompleteUtils\": 39,\n\t\"./autocompleteUtils.js\": 39,\n\t\"./autocompleteUtils.js.flow\": 182,\n\t\"./getAutocompleteSuggestions\": 33,\n\t\"./getAutocompleteSuggestions.js\": 33,\n\t\"./getAutocompleteSuggestions.js.flow\": 183,\n\t\"./getDefinition\": 40,\n\t\"./getDefinition.js\": 40,\n\t\"./getDefinition.js.flow\": 184,\n\t\"./getDiagnostics\": 42,\n\t\"./getDiagnostics.js\": 42,\n\t\"./getDiagnostics.js.flow\": 185,\n\t\"./getHoverInformation\": 43,\n\t\"./getHoverInformation.js\": 43,\n\t\"./getHoverInformation.js.flow\": 186,\n\t\"./getOutline\": 57,\n\t\"./getOutline.js\": 57,\n\t\"./getOutline.js.flow\": 187,\n\t\"./index\": 27,\n\t\"./index.js\": 27,\n\t\"./index.js.flow\": 188\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 88;"],"sourceRoot":""}